@page
@model LoginModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string? GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(this.HttpContext).RequestToken;
    }
}

@{
    Layout = "_LayoutLogin";
    ViewData["Title"] = "Log in";
}

<section class="h-100">
    <div class="container h-100">
        <div class="row justify-content-sm-center h-100">
            <div class="col-xxl-4 col-xl-5 col-lg-5 col-md-7 col-sm-9">
                <div class="text-center my-5">
                    <img src="https://getbootstrap.com/docs/5.0/assets/brand/bootstrap-logo.svg" alt="logo" width="100">
                </div>
                <div class="card shadow-lg">
                    <div class="card-body p-5">
                        <h1 class="fs-4 card-title fw-bold mb-4">Login</h1>
                        <form method="POST" class="needs-validation">
                            <input type="hidden" id="RequestVerificationToken" name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
                          
                            <div class="mb-3">
                                <label asp-for="Input.Email" class="mb-2 text-muted">E-Mail Address</label>
                                <input asp-for="Input.Email" 
                                       type="email" 
                                       class="form-control" 
                                       autocomplete="username" 
                                       aria-required="true" 
                                       required 
                                       autofocus 
                                       disabled="@Model.RenderPageForPasskeyChallenge"/>
                                <span asp-validation-for="Input.Email" class="invalid-feedback">
                                </span>
                            </div>

                            <div class="d-flex align-items-center">
                                <div class="form-check">
                                    <input type="checkbox" asp-for="Input.RememberMe" 
                                           class="form-check-input"
                                           disabled="@Model.RenderPageForPasskeyChallenge">
                                    <label asp-for="Input.RememberMe" class="form-check-label">Remember Me</label>
                                </div>
                                
                                @if(!Model.RenderPageForPasskeyChallenge)
                                {
                                    <button type="submit" class="btn btn-primary ms-auto">
                                        Login
                                    </button>
                                }
                            </div>
                        </form>
                    </div>
                    
                    
                    @if (!Model.RenderPageForPasskeyChallenge)
                    {
                        <div class="card-footer py-3 border-0">
                            <div class="text-center">
                                Don't have an account?
                                <a class="text-dark" asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Create one</a>
                            </div>
                        </div>
                    }

                </div>
                <div class="text-center mt-5 text-muted">
                    Copyright &copy; @DateTime.Today.Year &mdash; OpenIdDict
                </div>
            </div>
        </div>
    </div>
</section>

@if (Model.RenderPageForPasskeyChallenge)
{
    <div style="display:none" id="fido2TapKeyToLogin">FIDO2_TAP_YOUR_SECURITY_KEY_TO_LOGIN</div>
    <div style="display:none" id="fido2CouldNotVerifyAssertion">FIDO2_COULD_NOT_VERIFY_ASSERTION</div>
    <div style="display:none" id="passkeysReturnUrl">@Model.ReturnUrl</div>
}


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    @if (Model.RenderPageForPasskeyChallenge)
    {
        <partial name="_PasskeysLoginScriptsPartial" />

        <script>
            window.onload = function () {
                handleSignIn('@Model.Input.Email', @Model.Input.RememberMe.ToString().ToLowerInvariant());
            };
        </script>
    }
}

@* @if (Model.RenderPageForPasskeyChallenge)
{
    <script>
        window.onload = function () {
            handleSignIn('@Model.Input.Email', @Model.Input.RememberMe);
        };
    </script>
} *@